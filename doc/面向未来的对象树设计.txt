原则:2D 系统
坐标系:目前基于px的坐标系，可以在配置的时候引入物理坐标系，坐标为浮点数的物理尺寸，在定义dpi后可以与px坐标系交换
图形UIObject需要这样的坐标系
内部在运行时为了效率会把配置的物理坐标系转变为px坐标系(浮点数转整型数，注意精度带来的一些开闭区间问题)

新的位置关系:
现在的位置关系是标准的"正规矩形位置"，应该允许定义更灵活的位置信息,比如指定4点坐标的矩形，或针对某点旋转的矩形
在位置关系里引入变换?


引入变换:
这里可以把Fake3D发挥到极致
这样很多3D动画的制作就变成了对对象变换属性的动态调整



引入预处理与后处理
目前，固定的渲染流程让UIObject的绘制函数只能依赖前面绘制完成的对象(zorder比自己小的)，如何允许依赖逻辑上比自己后绘制的对象？
后处理（Effective）:
Photoshop的图层效果


对对象的分类更合理
能区分控件的孩子(与控件的逻辑有关的)和控件的孩子(后面通过代码添加的，只是由于对象树原因 处在对象的孩子里，逻辑上和控件没关系)




被动绘制UIObject,主动绘制UIObject,半主动绘制UIObject,"实时"对象（这个对象的例子是windows下绘制鼠标光标的策略，用于精确快速的反应用户输入）

对HostWnd的分类


多进程维护同一个树(在逻辑上是合理的)，引入权限，分步绘制等概念


更高效，符合实际的裁剪/mask设计，包括多层绘制裁剪

适当的支持3D?

设计上更好的支持调试(Debug)和"错误挖掘"，帮助进行各种诊断(目前常见的诊断需求?)


